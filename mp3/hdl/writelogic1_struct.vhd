-- VHDL Entity ece411.WriteLogic1.interface
--
-- Created:
--          by - adalton2.ews (gelib-057-24.ews.illinois.edu)
--          at - 21:22:22 02/27/14
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

ENTITY WriteLogic1 IS
   PORT( 
      DATAOUT    : IN     LC3b_word;
      MWRITEH_L  : IN     std_logic;
      MWRITEL_L  : IN     std_logic;
      OFFSET     : IN     LC3B_C_OFFSET;
      WayMuxData : IN     LC3b_oword;
      mixedData  : OUT    lc3b_oword
   );

-- Declarations

END WriteLogic1 ;

--
-- VHDL Architecture ece411.WriteLogic1.struct
--
-- Created:
--          by - adalton2.ews (gelib-057-24.ews.illinois.edu)
--          at - 21:22:22 02/27/14
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;


ARCHITECTURE struct OF WriteLogic1 IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL byte0    : lc3b_byte;
   SIGNAL byte1    : lc3b_byte;
   SIGNAL byte10   : lc3b_byte;
   SIGNAL byte11   : lc3b_byte;
   SIGNAL byte12   : lc3b_byte;
   SIGNAL byte13   : lc3b_byte;
   SIGNAL byte14   : lc3b_byte;
   SIGNAL byte15   : lc3b_byte;
   SIGNAL byte2    : lc3b_byte;
   SIGNAL byte3    : lc3b_byte;
   SIGNAL byte4    : lc3b_byte;
   SIGNAL byte5    : lc3b_byte;
   SIGNAL byte6    : lc3b_byte;
   SIGNAL byte7    : lc3b_byte;
   SIGNAL byte8    : lc3b_byte;
   SIGNAL byte9    : lc3b_byte;
   SIGNAL highByte : lc3b_byte;
   SIGNAL lowByte  : lc3b_byte;
   SIGNAL word0    : std_logic;
   SIGNAL word0out : lc3b_word;
   SIGNAL word1    : std_logic;
   SIGNAL word1out : lc3b_word;
   SIGNAL word2    : std_logic;
   SIGNAL word2out : lc3b_word;
   SIGNAL word3    : std_logic;
   SIGNAL word3out : lc3b_word;
   SIGNAL word4    : std_logic;
   SIGNAL word4out : lc3b_word;
   SIGNAL word5    : std_logic;
   SIGNAL word5out : lc3b_word;
   SIGNAL word6    : std_logic;
   SIGNAL word6out : lc3b_word;
   SIGNAL word7    : std_logic;
   SIGNAL word7out : lc3b_word;


   -- Component Declarations
   COMPONENT DATAOUTsplit
   PORT (
      DATAOUT  : IN     LC3b_word ;
      highByte : OUT    lc3b_byte ;
      lowByte  : OUT    lc3b_byte 
   );
   END COMPONENT;
   COMPONENT OffsetDecode
   PORT (
      OFFSET : IN     LC3B_C_OFFSET ;
      word0  : OUT    std_logic ;
      word1  : OUT    std_logic ;
      word2  : OUT    std_logic ;
      word3  : OUT    std_logic ;
      word4  : OUT    std_logic ;
      word5  : OUT    std_logic ;
      word6  : OUT    std_logic ;
      word7  : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT WayDataSplit
   PORT (
      WayMuxData : IN     LC3b_oword ;
      byte1      : OUT    lc3b_byte ;
      byte2      : OUT    lc3b_byte ;
      byte3      : OUT    lc3b_byte ;
      byte4      : OUT    lc3b_byte ;
      byte5      : OUT    lc3b_byte ;
      byte6      : OUT    lc3b_byte ;
      byte7      : OUT    lc3b_byte ;
      byte8      : OUT    lc3b_byte ;
      byte9      : OUT    lc3b_byte ;
      byte10     : OUT    lc3b_byte ;
      byte11     : OUT    lc3b_byte ;
      byte12     : OUT    lc3b_byte ;
      byte13     : OUT    lc3b_byte ;
      byte14     : OUT    lc3b_byte ;
      byte15     : OUT    lc3b_byte ;
      byte0      : OUT    lc3b_byte 
   );
   END COMPONENT;
   COMPONENT WordSelect
   PORT (
      S0       : IN     std_logic ;
      S1       : IN     std_logic ;
      S2       : IN     std_logic ;
      current0 : IN     lc3b_byte ;
      current1 : IN     lc3b_byte ;
      new0     : IN     lc3b_byte ;
      new1     : IN     lc3b_byte ;
      WordOut  : OUT    lc3b_word 
   );
   END COMPONENT;
   COMPONENT wordJoin
   PORT (
      word0out  : IN     lc3b_word ;
      word1out  : IN     lc3b_word ;
      word2out  : IN     lc3b_word ;
      word3out  : IN     lc3b_word ;
      word4out  : IN     lc3b_word ;
      word5out  : IN     lc3b_word ;
      word6out  : IN     lc3b_word ;
      word7out  : IN     lc3b_word ;
      mixedData : OUT    lc3b_oword 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : DATAOUTsplit USE ENTITY ece411.DATAOUTsplit;
   FOR ALL : OffsetDecode USE ENTITY ece411.OffsetDecode;
   FOR ALL : WayDataSplit USE ENTITY ece411.WayDataSplit;
   FOR ALL : WordSelect USE ENTITY ece411.WordSelect;
   FOR ALL : wordJoin USE ENTITY ece411.wordJoin;
   -- pragma synthesis_on


BEGIN

   -- Instance port mappings.
   split1 : DATAOUTsplit
      PORT MAP (
         DATAOUT  => DATAOUT,
         highByte => highByte,
         lowByte  => lowByte
      );
   offDecode1 : OffsetDecode
      PORT MAP (
         OFFSET => OFFSET,
         word0  => word0,
         word1  => word1,
         word2  => word2,
         word3  => word3,
         word4  => word4,
         word5  => word5,
         word6  => word6,
         word7  => word7
      );
   split0 : WayDataSplit
      PORT MAP (
         WayMuxData => WayMuxData,
         byte1      => byte1,
         byte2      => byte2,
         byte3      => byte3,
         byte4      => byte4,
         byte5      => byte5,
         byte6      => byte6,
         byte7      => byte7,
         byte8      => byte8,
         byte9      => byte9,
         byte10     => byte10,
         byte11     => byte11,
         byte12     => byte12,
         byte13     => byte13,
         byte14     => byte14,
         byte15     => byte15,
         byte0      => byte0
      );
   WordSelect0 : WordSelect
      PORT MAP (
         S0       => MWRITEL_L,
         S1       => MWRITEH_L,
         S2       => word0,
         current0 => byte0,
         current1 => byte1,
         new0     => lowByte,
         new1     => highByte,
         WordOut  => word0out
      );
   WordSelect1 : WordSelect
      PORT MAP (
         S0       => MWRITEL_L,
         S1       => MWRITEH_L,
         S2       => word1,
         current0 => byte2,
         current1 => byte3,
         new0     => lowByte,
         new1     => highByte,
         WordOut  => word1out
      );
   WordSelect2 : WordSelect
      PORT MAP (
         S0       => MWRITEL_L,
         S1       => MWRITEH_L,
         S2       => word2,
         current0 => byte4,
         current1 => byte5,
         new0     => lowByte,
         new1     => highByte,
         WordOut  => word2out
      );
   WordSelect3 : WordSelect
      PORT MAP (
         S0       => MWRITEL_L,
         S1       => MWRITEH_L,
         S2       => word3,
         current0 => byte6,
         current1 => byte7,
         new0     => lowByte,
         new1     => highByte,
         WordOut  => word3out
      );
   WordSelect4 : WordSelect
      PORT MAP (
         S0       => MWRITEL_L,
         S1       => MWRITEH_L,
         S2       => word4,
         current0 => byte8,
         current1 => byte9,
         new0     => lowByte,
         new1     => highByte,
         WordOut  => word4out
      );
   WordSelect5 : WordSelect
      PORT MAP (
         S0       => MWRITEL_L,
         S1       => MWRITEH_L,
         S2       => word5,
         current0 => byte10,
         current1 => byte11,
         new0     => lowByte,
         new1     => highByte,
         WordOut  => word5out
      );
   WordSelect6 : WordSelect
      PORT MAP (
         S0       => MWRITEL_L,
         S1       => MWRITEH_L,
         S2       => word6,
         current0 => byte12,
         current1 => byte13,
         new0     => lowByte,
         new1     => highByte,
         WordOut  => word6out
      );
   WordSelect7 : WordSelect
      PORT MAP (
         S0       => MWRITEL_L,
         S1       => MWRITEH_L,
         S2       => word7,
         current0 => byte14,
         current1 => byte15,
         new0     => lowByte,
         new1     => highByte,
         WordOut  => word7out
      );
   joinWords : wordJoin
      PORT MAP (
         word0out  => word0out,
         word1out  => word1out,
         word2out  => word2out,
         word3out  => word3out,
         word4out  => word4out,
         word5out  => word5out,
         word6out  => word6out,
         word7out  => word7out,
         mixedData => mixedData
      );

END struct;
