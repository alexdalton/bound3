-- VHDL Entity ece411.Memory.symbol
--
-- Created:
--          by - adalton2.ews (siebl-0218-19.ews.illinois.edu)
--          at - 20:40:10 04/03/14
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

ENTITY Memory IS
   PORT( 
      CLK         : IN     std_logic;
      D_ADDRESS   : IN     lc3b_word;
      D_DATAOUT   : IN     lc3b_word;
      D_MREAD_L   : IN     std_logic;
      D_MWRITEH_L : IN     std_logic;
      D_MWRITEL_L : IN     std_logic;
      I_ADDRESS   : IN     lc3b_word;
      I_MREAD_L   : IN     std_logic;
      RESET_L     : IN     std_logic;
      D_DATAIN    : OUT    lc3b_word;
      D_MRESP_H   : OUT    std_logic  := '0';
      I_DATAIN    : OUT    lc3b_word;
      I_MRESP_H   : OUT    std_logic  := '0'
   );

-- Declarations

END Memory ;

--
-- VHDL Architecture ece411.Memory.struct
--
-- Created:
--          by - adalton2.ews (siebl-0218-19.ews.illinois.edu)
--          at - 20:40:10 04/03/14
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;


ARCHITECTURE struct OF Memory IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL MWRITEH_L : std_logic;
   SIGNAL MWRITEL_L : std_logic;
   SIGNAL PMADDRESS : LC3B_WORD;
   SIGNAL PMDATAIN  : LC3B_OWORD;
   SIGNAL PMDATAOUT : LC3B_OWORD;
   SIGNAL PMREAD_L  : std_logic;
   SIGNAL PMRESP_H  : STD_LOGIC;
   SIGNAL PMWRITE_L : std_logic;


   -- Component Declarations
   COMPONENT PHYSICAL_MEMORY
   PORT (
      CLK       : IN     STD_LOGIC;
      PMADDRESS : IN     LC3B_WORD;
      PMDATAOUT : IN     LC3B_OWORD;
      PMREAD_L  : IN     STD_LOGIC;
      PMWRITE_L : IN     STD_LOGIC;
      RESET_L   : IN     STD_LOGIC;
      PMDATAIN  : OUT    LC3B_OWORD;
      PMRESP_H  : OUT    STD_LOGIC
   );
   END COMPONENT;
   COMPONENT cache
   PORT (
      ADDRESS   : IN     LC3b_word ;
      CLK       : IN     STD_LOGIC ;
      DATAOUT   : IN     LC3b_word ;
      MREAD_L   : IN     std_logic ;
      MWRITEH_L : IN     std_logic ;
      MWRITEL_L : IN     std_logic ;
      PMDATAIN  : IN     LC3B_OWORD ;
      PMRESP_H  : IN     std_logic ;
      RESET_L   : IN     STD_LOGIC ;
      DATAIN    : OUT    LC3b_word ;
      MRESP_H   : OUT    std_logic  := '0';
      PMADDRESS : OUT    LC3B_WORD ;
      PMDATAOUT : OUT    LC3B_OWORD ;
      PMREAD_L  : OUT    std_logic ;
      PMWRITE_L : OUT    std_logic 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : PHYSICAL_MEMORY USE ENTITY ece411.PHYSICAL_MEMORY;
   FOR ALL : cache USE ENTITY ece411.cache;
   -- pragma synthesis_on


BEGIN
   -- Architecture concurrent statements
   -- HDL Embedded Text Block 1 eb1
   -- eb1 1
   MWRITEH_L <= '1';
   MWRITEL_L <= '1';


   -- Instance port mappings.
   PMEM : PHYSICAL_MEMORY
      PORT MAP (
         CLK       => CLK,
         PMADDRESS => PMADDRESS,
         PMDATAOUT => PMDATAOUT,
         PMREAD_L  => PMREAD_L,
         PMWRITE_L => PMWRITE_L,
         RESET_L   => RESET_L,
         PMDATAIN  => PMDATAIN,
         PMRESP_H  => PMRESP_H
      );
   dL1Cache : cache
      PORT MAP (
         ADDRESS   => D_ADDRESS,
         CLK       => CLK,
         DATAOUT   => D_DATAOUT,
         MREAD_L   => D_MREAD_L,
         MWRITEH_L => D_MWRITEH_L,
         MWRITEL_L => D_MWRITEL_L,
         PMDATAIN  => PMDATAIN,
         PMRESP_H  => PMRESP_H,
         RESET_L   => RESET_L,
         DATAIN    => D_DATAIN,
         MRESP_H   => D_MRESP_H,
         PMADDRESS => OPEN,
         PMDATAOUT => OPEN,
         PMREAD_L  => OPEN,
         PMWRITE_L => OPEN
      );
   iL1Cache : cache
      PORT MAP (
         ADDRESS   => I_ADDRESS,
         CLK       => CLK,
         DATAOUT   => D_DATAOUT,
         MREAD_L   => I_MREAD_L,
         MWRITEH_L => MWRITEH_L,
         MWRITEL_L => MWRITEL_L,
         PMDATAIN  => PMDATAIN,
         PMRESP_H  => PMRESP_H,
         RESET_L   => RESET_L,
         DATAIN    => I_DATAIN,
         MRESP_H   => I_MRESP_H,
         PMADDRESS => PMADDRESS,
         PMDATAOUT => PMDATAOUT,
         PMREAD_L  => PMREAD_L,
         PMWRITE_L => PMWRITE_L
      );

END struct;
